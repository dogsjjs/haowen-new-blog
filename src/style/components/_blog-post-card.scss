// Styles for BlogPostCard.vue

.post-item {
  // Acrylic effect - these variables are expected to be globally defined
  // and handle light/dark modes.
  background-color: var(--acrylic-bg-current);
  backdrop-filter: blur(12px) saturate(180%);
  -webkit-backdrop-filter: blur(12px) saturate(180%); /* Safari */

  border: 1px solid var(--acrylic-border-color);
  border-radius: 8px;
  margin-bottom: 20px;
  padding: 20px;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 12px 0 var(--acrylic-shadow-current);
  break-inside: avoid-column;
  transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;

  // The parent component wrapping this card will handle the click and cursor.
  // If the card itself needs to be clickable independently, add cursor: pointer here.

  &:hover {
    transform: translateY(-2px);
    box-shadow: var(--acrylic-shadow-dark); // Ensure --acrylic-shadow-dark is defined globally for hover
  }
}

.post-image {
  width: 100%;
  object-fit: cover;
  border-radius: 6px;
  margin-bottom: 15px;
  background-color: var(--el-fill-color-light); // Element Plus variable for placeholder/light fill
}

.post-content {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.post-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.85rem;
  color: var(--el-text-color-secondary); // Element Plus secondary text color
  margin-bottom: 8px;

  // Styles for .post-date are inherent or can be added if specific styling is needed.
  // Styles for the content passed into the 'category' slot will be defined by the parent component.
}

.post-date {
  // Basic styling if any, usually just inherits from .post-meta
}

.post-title {
  font-size: 1.3rem;
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 10px;
  color: var(--el-text-color-primary); // Element Plus primary text color
  line-height: 1.3;
}

.post-excerpt {
  font-size: 0.9rem;
  line-height: 1.6;
  color: var(--el-text-color-regular);
  margin-bottom: 10px; // Add some margin before tags slot if it exists
}

.post-tags-slot-container {
  margin-top: auto; // Push to bottom if content above doesn't fill height
  padding-top: 10px; // Space from excerpt or content above
  display: flex; // Allows slotted tags to flow
  flex-wrap: wrap;
  gap: 6px; // Gap between slotted tag items
  // Styles for the tag items themselves will be provided by the parent component via the 'tags' slot.
}